events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Reverse proxy for centralized help documentation (avoids browser CORS and 3rd-party proxies)
        # Example request: /helpdocs/ntr-test/sv/subscriptions.md
        location /helpdocs/ {
            resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 valid=300s;
            resolver_timeout 10s;

            # Strip the /helpdocs/ prefix and proxy the remainder to GitHub raw
            # /helpdocs/<path> -> https://raw.githubusercontent.com/peka01/helpdoc/main/<path>
            proxy_pass https://raw.githubusercontent.com/peka01/helpdoc/main/;

            proxy_set_header Host raw.githubusercontent.com;
            proxy_set_header Accept "text/plain";
            proxy_set_header Cache-Control "no-cache";
            proxy_set_header Pragma "no-cache";
            proxy_set_header User-Agent "ntr-help-proxy/1.0";

            # Timeouts and buffering
            proxy_read_timeout 30s;
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_buffering on;
            proxy_buffers 8 16k;
            proxy_busy_buffers_size 24k;

            # CORS (allow app origin)
            add_header Access-Control-Allow-Origin "$http_origin" always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;

            if ($request_method = 'OPTIONS') {
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }

        # Handle client-side routing
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    }
}

