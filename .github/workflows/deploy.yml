name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  workflow_dispatch: # Allow manual triggering

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Check package files
      run: |
        echo "Current directory:"
        pwd
        echo "Files in current directory:"
        ls -la
        echo "Package.json exists:"
        ls -la package*.json
        echo "Node modules exists:"
        ls -la node_modules || echo "No node_modules found"
        echo "Package.json contents:"
        cat package.json
        
    - name: Install dependencies
      run: npm install --verbose
      
    - name: Check Vite config
      run: |
        echo "Vite config exists:"
        ls -la vite.config.ts
        echo "Vite config contents:"
        cat vite.config.ts
        
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
        VITE_GEMINI_API_KEY: ${{ secrets.VITE_GEMINI_API_KEY }}
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        
    - name: Check build output
      run: |
        echo "Build output directory:"
        ls -la dist/
        echo "Build output contents:"
        find dist/ -type f -name "*.js" -exec echo "=== {} ===" \; -exec head -5 {} \;
        echo "Checking for .nojekyll file:"
        ls -la dist/.nojekyll || echo "No .nojekyll file found"
        echo "Checking assets directory:"
        ls -la dist/assets/ || echo "No assets directory found"
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v4
      with:
        path: './dist'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
